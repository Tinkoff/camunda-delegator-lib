[versions]
kotlin = "1.7.10"
kotcoroutines = "1.6.4"
kotlinter = "3.11.1"
kotvalidator = "0.11.0"
klogging = "2.1.23"
camunda = "7.17.0"
springboot = "2.6.4"
springdm = "1.0.12.RELEASE"

[libraries]
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlin" }
dokka-kotlin-as-java = { module = "org.jetbrains.dokka:kotlin-as-java-plugin", version.ref = "kotlin" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-binary-validator = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "kotvalidator" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "klogging" }

springdoc-kotlin = { module = "org.springdoc:springdoc-openapi-kotlin", version = "1.6.9" }


spring-context = { module = "org.springframework:spring-context" }

spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-actuator" }
spring-boot-actuator-autoconfigure = { module = "org.springframework.boot:spring-boot-actuator-autoconfigure" }

spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-boot-autoconfigure-processor = { module = "org.springframework.boot:spring-boot-autoconfigure-processor" }
spring-dependency-management-plugin = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "springdm" }


camunda-engine = { module = "org.camunda.bpm:camunda-engine", version.ref = "camunda" }
camunda-engine-spring = { module = "org.camunda.bpm:camunda-engine-spring", version.ref = "camunda" }
camunda-spring-boot-starter = { module = "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter", version.ref = "camunda" }
camunda-spring-boot-starter-test = { module = "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-test", version.ref = "camunda" }

h2 = { module = "com.h2database:h2" }
assertj-core = { module = "org.assertj:assertj-core" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "4.0.0" }
camunda-bpm-assert = { module = "org.camunda.bpm:camunda-bpm-assert", version.ref = "camunda" }
camunda-bpm-process-test-coverage = { module = "org.camunda.community.process_test_coverage:camunda-process-test-coverage-junit5-platform-7", version = "2.0.0" }
camunda-bpm-junit5 = { module = "org.camunda.bpm:camunda-bpm-junit5", version.ref = "camunda" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version = "5.4.1" }

kotlinter-gradle = { module = "org.jmailen.gradle:kotlinter-gradle", version.ref = "kotlinter" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }

